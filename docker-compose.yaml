version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: weather-etl-postgres
    environment:
      POSTGRES_DB: weather_db
      POSTGRES_USER: weather_user
      POSTGRES_PASSWORD: weather_pass
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./schema.sql:/docker-entrypoint-initdb.d/02-schema.sql:ro
    networks:
      - weather-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U weather_user -d weather_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Weather ETL Application
  weather-etl:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather-etl-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/weather_db
      SPRING_DATASOURCE_USERNAME: weather_user
      SPRING_DATASOURCE_PASSWORD: weather_pass
      WEATHER_OUTPUT_CSV_PATH: /app/output/weather_data.csv
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_LIQUIBASE_CHANGE_LOG: classpath:db/changelog/db.changelog-master.xml
    ports:
      - "8080:8080"
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
    networks:
      - weather-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

networks:
  weather-network:
    driver: bridge
    name: weather-network

volumes:
  postgres_data:
    driver: local